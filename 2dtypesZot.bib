
@inproceedings{abramskyAbstractScalarsLoops2005,
  title = {Abstract {{Scalars}}, {{Loops}}, and {{Free Traced}} and {{Strongly Compact Closed Categories}}},
  booktitle = {Algebra and {{Coalgebra}} in {{Computer Science}}},
  author = {Abramsky, Samson},
  editor = {Fiadeiro, Jos{\'e} Luiz and Harman, Neil and Roggenbach, Markus and Rutten, Jan},
  year = {2005},
  pages = {1--29},
  publisher = {{Springer}},
  address = {{Berlin, Heidelberg}},
  doi = {10.1007/11548133_1},
  url = {10.1007/11548133_1},
  abstract = {We study structures which have arisen in recent work by the present author and Bob Coecke on a categorical axiomatics for Quantum Mechanics; in particular, the notion of strongly compact closed category. We explain how these structures support a notion of scalar which allows quantitative aspects of physical theory to be expressed, and how the notion of strong compact closure emerges as a significant refinement of the more classical notion of compact closed category.We then proceed to an extended discussion of free constructions for a sequence of progressively more complex kinds of structured category, culminating in the strongly compact closed case. The simple geometric and combinatorial ideas underlying these constructions are emphasized. We also discuss variations where a prescribed monoid of scalars can be `glued in' to the free construction.},
  annotation = {ZSCC: NoCitationData[s0]},
  file = {/home/vikraman/Zotero/storage/IY7NHCQG/Abramsky_2005_Abstract Scalars, Loops, and Free Traced and Strongly Compact Closed Categories.pdf},
  isbn = {978-3-540-31876-7},
  keywords = {Algebraic Description,Monoidal Category,Monoidal Structure,Symmetric Monoidal Category,Tensor Product},
  language = {en},
  series = {Lecture {{Notes}} in {{Computer Science}}}
}

@book{bellmanCombinatorialAnalysis1960,
  title = {Combinatorial {{Analysis}}},
  author = {Bellman, Richard and Hall, Marshall},
  year = {1960},
  volume = {10},
  publisher = {{American Mathematical Society}},
  issn = {2324-7088, 0160-7634},
  doi = {http://dx.doi.org/10.1090/psapm/010},
  url = {https://doi.org/10.1090/psapm/010},
  urldate = {2021-01-30},
  abstract = {Advancing research. Creating connections.},
  annotation = {ZSCC: 0000021},
  isbn = {978-0-8218-1310-2 978-0-8218-7334-2 978-0-8218-9225-1},
  language = {en},
  series = {Proceedings of {{Symposia}} in {{Applied Mathematics}}}
}

@article{bergerTeachingOrdinalPatterns2019,
  title = {Teaching {{Ordinal Patterns}} to a {{Computer}}: {{Efficient Encoding Algorithms Based}} on the {{Lehmer Code}}},
  shorttitle = {Teaching {{Ordinal Patterns}} to a {{Computer}}},
  author = {Berger, Sebastian and Kravtsiv, Andrii and Schneider, Gerhard and Jordan, Denis},
  year = {2019},
  month = oct,
  volume = {21},
  pages = {1023},
  publisher = {{Multidisciplinary Digital Publishing Institute}},
  doi = {10.3390/e21101023},
  url = {https://www.mdpi.com/1099-4300/21/10/1023},
  urldate = {2021-01-30},
  abstract = {Ordinal patterns are the common basis of various techniques used in the study of dynamical systems and nonlinear time series analysis. The present article focusses on the computational problem of turning time series into sequences of ordinal patterns. In a first step, a numerical encoding scheme for ordinal patterns is proposed. Utilising the classical Lehmer code, it enumerates ordinal patterns by consecutive non-negative integers, starting from zero. This compact representation considerably simplifies working with ordinal patterns in the digital domain. Subsequently, three algorithms for the efficient extraction of ordinal patterns from time series are discussed, including previously published approaches that can be adapted to the Lehmer code. The respective strengths and weaknesses of those algorithms are discussed, and further substantiated by benchmark results. One of the algorithms stands out in terms of scalability: its run-time increases linearly with both the pattern order and the sequence length, while its memory footprint is practically negligible. These properties enable the study of high-dimensional pattern spaces at low computational cost. In summary, the tools described herein may improve the efficiency of virtually any ordinal pattern-based analysis method, among them quantitative measures like permutation entropy and symbolic transfer entropy, but also techniques like forbidden pattern identification. Moreover, the concepts presented may allow for putting ideas into practice that up to now had been hindered by computational burden. To enable smooth evaluation, a function library written in the C programming language, as well as language bindings and native implementations for various numerical computation environments are provided in the supplements.},
  annotation = {ZSCC: 0000005},
  copyright = {http://creativecommons.org/licenses/by/3.0/},
  file = {/home/vikraman/Zotero/storage/AHXMFFIG/Berger et al. - 2019 - Teaching Ordinal Patterns to a Computer Efficient.pdf;/home/vikraman/Zotero/storage/EW6CAJLR/1023.html},
  journal = {Entropy},
  keywords = {Lehmer code,ordinal patterns,permutation entropy,symbolic dynamics,symbolic transfer entropy},
  language = {en},
  number = {10}
}

@article{blackwellTwodimensionalMonadTheory1989,
  title = {Two-Dimensional Monad Theory},
  author = {Blackwell, R. and Kelly, G. M. and Power, A. J.},
  year = {1989},
  month = jul,
  volume = {59},
  pages = {1--41},
  issn = {0022-4049},
  doi = {10.1016/0022-4049(89)90160-6},
  url = {10.1016/0022-4049(89)90160-6},
  urldate = {2021-06-12},
  abstract = {We consider a 2-monad T with rank on a complete and cocomplete 2-category, and write T-Alg for the 2-category given the T-algebras, the morphisms preserving the structure to within coherent isomorphisms, and the appropriate 2-cells; T-Algs is the sub-2-category obtained by taking the strict morphisms. We show that T-Alg admits pseudo-limits and certain other limits, and that the inclusion 2-functor T-Algs \textrightarrow{} T-Alg has a left adjoint. We introduce the notion of flexible algebra, and use it to prove that T-Alg admits all bicolimits and that the 2-functor T-Alg \textrightarrow{} S-Alg induced by a monad-map S \textrightarrow{} T admits a left biadjoint.},
  annotation = {ZSCC: 0000300},
  file = {/home/vikraman/Zotero/storage/GYPIJCWU/Blackwell et al_1989_Two-dimensional monad theory.pdf;/home/vikraman/Zotero/storage/CBJS9IGT/0022404989901606.html},
  journal = {Journal of Pure and Applied Algebra},
  language = {en},
  number = {1}
}

@article{caretteReversibleProgramsUnivalent2018,
  title = {From {{Reversible Programs}} to {{Univalent Universes}} and {{Back}}},
  author = {Carette, Jacques and Chen, Chao-Hong and Choudhury, Vikraman and Sabry, Amr},
  year = {2018},
  month = apr,
  volume = {336},
  pages = {5--25},
  issn = {1571-0661},
  doi = {10.1016/j.entcs.2018.03.013},
  url = {https://www.sciencedirect.com/science/article/pii/S1571066118300161},
  urldate = {2021-05-03},
  abstract = {We establish a close connection between a reversible programming language based on type isomorphisms and a formally presented univalent universe. The correspondence relates combinators witnessing type isomorphisms in the programming language to paths in the univalent universe; and combinator optimizations in the programming language to 2-paths in the univalent universe. The result suggests a simple computational interpretation of paths and of univalence in terms of familiar programming constructs whenever the universe in question is computable.},
  annotation = {ZSCC: 0000006},
  file = {/home/vikraman/Zotero/storage/ASQN28SE/Carette et al_2018_From Reversible Programs to Univalent Universes and Back.pdf;/home/vikraman/Zotero/storage/THN239QE/S1571066118300161.html},
  journal = {Electronic Notes in Theoretical Computer Science},
  keywords = {Agda,Reversible programming,unilance},
  language = {en},
  series = {The {{Thirty}}-Third {{Conference}} on the {{Mathematical Foundations}} of {{Programming Semantics}} ({{MFPS XXXIII}})}
}

@inproceedings{fioreIsomorphismsGenericRecursive2004,
  title = {Isomorphisms of Generic Recursive Polynomial Types},
  booktitle = {Proceedings of the 31st {{ACM SIGPLAN}}-{{SIGACT}} Symposium on {{Principles}} of Programming Languages},
  author = {Fiore, Marcelo},
  year = {2004},
  month = jan,
  pages = {77--88},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/964001.964008},
  url = {https://doi.org/10.1145/964001.964008},
  urldate = {2021-06-11},
  abstract = {This paper gives the first decidability results on type isomorphism for recursive types, establishing the explicit decidability of type isomorphism for the type theory of sums and products over an inhabited generic recursive polynomial type. The technical development provides connections between themes in programming-language theory (type isomorphism) and computational algebra (Gr\"obner bases).},
  annotation = {ZSCC: 0000040},
  isbn = {978-1-58113-729-3},
  keywords = {data structure,Gr√∂bner bases,recursive types,rigs,semigroups,type isomorphism,type theory,word problem},
  series = {{{POPL}} '04}
}

@inproceedings{fioreRemarksIsomorphismsTyped2002,
  title = {Remarks on {{Isomorphisms}} in {{Typed Lambda Calculi}} with {{Empty}} and {{Sum Types}}},
  booktitle = {Proceedings of the 17th {{Annual IEEE Symposium}} on {{Logic}} in {{Computer Science}}},
  author = {Fiore, Marcelo P. and Cosmo, Roberto Di and Balat, Vincent},
  year = {2002},
  month = jul,
  pages = {147},
  publisher = {{IEEE Computer Society}},
  address = {{USA}},
  abstract = {Tarski asked whether the arithmetic identities taught in high school are complete for showing all arithmetic equations valid for the natural numbers. The answer to this question for the language of arithmetic expressions using a constant for the number one and the operations of product and exponentiation is affirmative, and the complete equational theory also characterises isomorphism in the typed lambda calculus, where the constant for one and the operations of product and exponentiation respectively correspond to the unit type and the product and arrow type constructors. This paper studies isomorphisms in typed lambda calculiwith empty and sum types from this viewpoint. We close an open problem by establishing that the theory of type isomorphisms in the presence of product, arrow, and sum types (with or without the unit type) is not finitely axiomatisable. Further, we observe that for type theories with arrow, empty and sum types the correspondence between isomorphism and arithmetic equality generally breaks down, but that it still holds in some particular cases including that of type isomorphism with the empty type and equality with zero.},
  annotation = {ZSCC: 0000024},
  isbn = {978-0-7695-1483-3},
  series = {{{LICS}} '02}
}

@inproceedings{jamesInformationEffects2012,
  title = {Information Effects},
  booktitle = {Proceedings of the 39th Annual {{ACM SIGPLAN}}-{{SIGACT}} Symposium on {{Principles}} of Programming Languages},
  author = {James, Roshan P. and Sabry, Amr},
  year = {2012},
  month = jan,
  pages = {73--84},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/2103656.2103667},
  url = {https://doi.org/10.1145/2103656.2103667},
  urldate = {2021-06-11},
  abstract = {Computation is a physical process which, like all other physical processes, is fundamentally reversible. From the notion of type isomorphisms, we derive a typed, universal, and reversible computational model in which information is treated as a linear resource that can neither be duplicated nor erased. We use this model as a semantic foundation for computation and show that the "gap" between conventional irreversible computation and logically reversible computation can be captured by a type-and-effect system. Our type-and-effect system is structured as an arrow metalanguage that exposes creation and erasure of information as explicit effect operations. Irreversible computations arise from interactions with an implicit information environment, thus making them a derived notion, much like open systems in Physics. We sketch several applications which can benefit from an explicit treatment of information effects, such as quantitative information-flow security and differential privacy.},
  annotation = {ZSCC: 0000048},
  isbn = {978-1-4503-1083-3},
  keywords = {arrows,linear logic,quantum computing,reversible logic},
  series = {{{POPL}} '12}
}

@incollection{lehmerTeachingCombinatorialTricks1960,
  title = {Teaching Combinatorial Tricks to a Computer},
  booktitle = {Proceedings of {{Symposia}} in {{Applied Mathematics}}},
  author = {Lehmer, D. H.},
  editor = {Bellman, Richard and Hall, Marshall},
  year = {1960},
  volume = {10},
  pages = {179--193},
  publisher = {{American Mathematical Society}},
  address = {{Providence, Rhode Island}},
  doi = {10.1090/psapm/010/0113289},
  url = {https://doi.org/10.1090/psapm/010},
  urldate = {2021-01-30},
  annotation = {ZSCC: NoCitationData[s1]},
  isbn = {978-0-8218-1310-2 978-0-8218-9225-1},
  language = {en}
}

@book{leinsterHigherOperadsHigher2004,
  title = {Higher {{Operads}}, {{Higher Categories}}},
  author = {Leinster, Tom},
  year = {2004},
  publisher = {{Cambridge University Press}},
  address = {{Cambridge}},
  doi = {10.1017/CBO9780511525896},
  url = {https://www.cambridge.org/core/books/higher-operads-higher-categories/E4BC6645A0DA99C2A9D50D8993BA54A9},
  urldate = {2021-06-12},
  abstract = {Higher-dimensional category theory is the study of n-categories, operads, braided monoidal categories, and other such exotic structures. It draws its inspiration from areas as diverse as topology, quantum algebra, mathematical physics, logic, and theoretical computer science. The heart of this book is the language of generalized operads. This is as natural and transparent a language for higher category theory as the language of sheaves is for algebraic geometry, or vector spaces for linear algebra. It is introduced carefully, then used to give simple descriptions of a variety of higher categorical structures. In particular, one possible definition of n-category is discussed in detail, and some common aspects of other possible definitions are established. This is the first book on the subject and lays its foundations. It will appeal to both graduate students and established researchers who wish to become acquainted with this modern branch of mathematics.},
  annotation = {ZSCC: 0000861},
  file = {/home/vikraman/Zotero/storage/BQHSB72Y/Leinster_2004_Higher Operads, Higher Categories.pdf;/home/vikraman/Zotero/storage/2YVACZ4N/E4BC6645A0DA99C2A9D50D8993BA54A9.html},
  isbn = {978-0-521-53215-0},
  series = {London {{Mathematical Society Lecture Note Series}}}
}

@book{univalentfoundationsprogramHomotopyTypeTheory2013,
  title = {Homotopy Type Theory: {{Univalent}} Foundations of Mathematics},
  author = {Univalent Foundations Program, The},
  year = {2013},
  publisher = {{Univalent Foundations Program}},
  address = {{Institute for Advanced Study}},
  url = {https://homotopytypetheory.org/book},
  annotation = {ZSCC: 0000006}
}

@article{vajnovszkiNewEulerMahonian2011,
  title = {A New {{Euler}}\textendash{{Mahonian}} Constructive Bijection},
  author = {Vajnovszki, Vincent},
  year = {2011},
  month = aug,
  volume = {159},
  pages = {1453--1459},
  issn = {0166-218X},
  doi = {10.1016/j.dam.2011.05.012},
  url = {http://www.sciencedirect.com/science/article/pii/S0166218X11001946},
  urldate = {2021-01-30},
  abstract = {Using generating functions, MacMahon proved in 1916 the remarkable fact that the major index has the same distribution as the inversion number for multiset permutations, and in 1968 Foata gave a constructive bijection proving MacMahon's result. Since then, many refinements have been derived, consisting of adding new constraints or new statistics. Here we give a new simple constructive bijection between the set of permutations with a given number of inversions and those with a given major index. We introduce a new statistic, mix, related to the Lehmer code, and using our new bijection we show that the bistatistic (mix,INV) is Euler\textendash Mahonian. Finally, we introduce the McMahon code for permutations which is the major-index counterpart of the Lehmer code and show that the two codes are related by a simple relation.},
  annotation = {ZSCC: 0000011},
  file = {/home/vikraman/Zotero/storage/2UQY9VU8/Vajnovszki - 2011 - A new Euler‚ÄìMahonian constructive bijection.pdf;/home/vikraman/Zotero/storage/DMG43HLI/S0166218X11001946.html},
  journal = {Discrete Applied Mathematics},
  keywords = {Constructive bijection,Inversion number,Major index,Permutation (bi)statistic},
  language = {en},
  number = {14}
}

@article{yanofskySyntaxCoherence2000,
  title = {{The syntax of coherence}},
  author = {Yanofsky, Noson S.},
  year = {2000},
  volume = {41},
  pages = {255--304},
  url = {http://www.numdam.org/item/?id=CTGDC_2000__41_4_255_0},
  urldate = {2021-06-12},
  annotation = {ZSCC: 0000004},
  file = {/home/vikraman/Zotero/storage/U45B3ZWJ/Yanofsky_2000_The syntax of coherence.pdf;/home/vikraman/Zotero/storage/T8I9WN5J/item.html},
  journal = {Cahiers de Topologie et G\'eom\'etrie Diff\'erentielle Cat\'egoriques},
  keywords = {‚õî No DOI found},
  language = {fr},
  number = {4}
}


