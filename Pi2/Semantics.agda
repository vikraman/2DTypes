{-# OPTIONS --without-K --allow-unsolved-metas #-}

module Pi2.Semantics where

open import UnivalentTypeTheory
open import TwoUniverse as M
open import Pi2.Syntax as S

------------------------------------------------------------------------------
-- Soundness: mapping syntax to the model

‚ü¶_‚üß : U ‚Üí U[ùüö]
‚ü¶ `ùüö ‚üß = M.`ùüö

‚ü¶_‚üß‚ÇÅ : {A B : U} ‚Üí A ‚ü∑‚ÇÅ B ‚Üí ‚ü¶ A ‚üß == ‚ü¶ B ‚üß
‚ü¶_‚üß‚ÇÅ `id = M.`id
‚ü¶_‚üß‚ÇÅ `not = M.`not
‚ü¶_‚üß‚ÇÅ (!‚ÇÅ p) = ! ‚ü¶ p ‚üß‚ÇÅ
‚ü¶_‚üß‚ÇÅ (p ‚óæ‚ÇÅ q) = ‚ü¶ p ‚üß‚ÇÅ ‚óæ ‚ü¶ q ‚üß‚ÇÅ

‚ü¶_‚üß‚ÇÇ : {A B : U} {p q : A ‚ü∑‚ÇÅ B} ‚Üí (u : p ‚ü∑‚ÇÇ q) ‚Üí ‚ü¶ p ‚üß‚ÇÅ == ‚ü¶ q ‚üß‚ÇÅ
‚ü¶_‚üß‚ÇÇ {p = p} `id‚ÇÇ = refl ‚ü¶ p ‚üß‚ÇÅ
‚ü¶_‚üß‚ÇÇ (`idl p) = ‚óæunitl ‚ü¶ p ‚üß‚ÇÅ
‚ü¶_‚üß‚ÇÇ (`idr p) = ‚óæunitr ‚ü¶ p ‚üß‚ÇÅ
‚ü¶_‚üß‚ÇÇ (`!l p) = ‚óæinvr ‚ü¶ p ‚üß‚ÇÅ
‚ü¶_‚üß‚ÇÇ (`!r p) = ‚óæinvl ‚ü¶ p ‚üß‚ÇÅ
‚ü¶_‚üß‚ÇÇ `!id = refl M.`id
‚ü¶_‚üß‚ÇÇ `!not = M.OneDimensionalTerms.!not=not
‚ü¶_‚üß‚ÇÇ (`!‚óæ {p = p} {q}) = !‚óæ ‚ü¶ p ‚üß‚ÇÅ ‚ü¶ q ‚üß‚ÇÅ
‚ü¶_‚üß‚ÇÇ `!! = !! _
‚ü¶_‚üß‚ÇÇ (`assoc p q r) = ‚óæassoc _ _ _
‚ü¶_‚üß‚ÇÇ (!‚ÇÇ u) = ! ‚ü¶ u ‚üß‚ÇÇ
‚ü¶_‚üß‚ÇÇ (u ‚óæ‚ÇÇ u‚ÇÅ) = ‚ü¶ u ‚üß‚ÇÇ ‚óæ ‚ü¶ u‚ÇÅ ‚üß‚ÇÇ
‚ü¶_‚üß‚ÇÇ (_‚ñ°‚ÇÇ_ {u = u} {v}) = ‚ü¶ u ‚üß‚ÇÇ [2,0,2] ‚ü¶ v ‚üß‚ÇÇ

‚ü¶_‚üß‚ÇÉ : {A B : U} {p q : A ‚ü∑‚ÇÅ B} {u v : p ‚ü∑‚ÇÇ q} ‚Üí (Œ± : u ‚ü∑‚ÇÉ v) ‚Üí ‚ü¶ u ‚üß‚ÇÇ == ‚ü¶ v ‚üß‚ÇÇ
‚ü¶ `trunc ‚üß‚ÇÉ = {!!}

------------------------------------------------------------------------------
-- Completeness: mapping the model to syntax

quote‚ÇÄ : U[ùüö] ‚Üí U
quote‚ÇÄ _ = U.`ùüö

quote‚ÇÅ : {A B : U} ‚Üí ‚ü¶ A ‚üß == ‚ü¶ B ‚üß ‚Üí A ‚ü∑‚ÇÅ B
quote‚ÇÅ {U.`ùüö} {U.`ùüö} eq with M.OneDimensionalTerms.all-1-paths eq
... | i‚ÇÅ _ = _‚ü∑‚ÇÅ_.`id
... | i‚ÇÇ _ = _‚ü∑‚ÇÅ_.`not

quote‚ÇÇ : {A B : U} {p q : A ‚ü∑‚ÇÅ B} ‚Üí ‚ü¶ p ‚üß‚ÇÅ == ‚ü¶ q ‚üß‚ÇÅ ‚Üí (p ‚ü∑‚ÇÇ q)
quote‚ÇÇ eq‚ÇÇ = {!!}

quote‚ÇÉ : {A B : U} {p q : A ‚ü∑‚ÇÅ B} {u v : p ‚ü∑‚ÇÇ q} ‚Üí ‚ü¶ u ‚üß‚ÇÇ == ‚ü¶ v ‚üß‚ÇÇ ‚Üí (u ‚ü∑‚ÇÉ v)
quote‚ÇÉ _ = `trunc

------------------------------------------------------------------------------
-- Normalization by evaluation a la Altenkirch

canonical‚ÇÅ : {A B : U} ‚Üí (p : A ‚ü∑‚ÇÅ B) ‚Üí (A ‚ü∑‚ÇÅ B)
canonical‚ÇÅ p = quote‚ÇÅ ‚ü¶ p ‚üß‚ÇÅ

canonical-resp : {A B : U} {p q : A ‚ü∑‚ÇÅ B} ‚Üí (‚ü¶ p ‚üß‚ÇÅ == ‚ü¶ q ‚üß‚ÇÅ) ‚Üí
                 canonical‚ÇÅ p ‚ü∑‚ÇÇ canonical‚ÇÅ q
canonical-resp eq = {!!}

inversion‚ÇÅ : {A B : U} ‚Üí (p : A ‚ü∑‚ÇÅ B) ‚Üí canonical‚ÇÅ p ‚ü∑‚ÇÇ p
inversion‚ÇÅ {U.`ùüö} {.U.`ùüö} _‚ü∑‚ÇÅ_.`id = `id‚ÇÇ
inversion‚ÇÅ {U.`ùüö} {.U.`ùüö} _‚ü∑‚ÇÅ_.`not = {!`id‚ÇÇ!} -- lack of evaluation blocks
inversion‚ÇÅ (!‚ÇÅ u) = {!!}
inversion‚ÇÅ (u ‚óæ‚ÇÅ u‚ÇÅ) = {!!}

completeness‚ÇÅ : {A B : U} {p q : A ‚ü∑‚ÇÅ B} ‚Üí ‚ü¶ p ‚üß‚ÇÅ == ‚ü¶ q ‚üß‚ÇÅ ‚Üí p ‚ü∑‚ÇÇ q
completeness‚ÇÅ {p = p} {q = q} u =
  (!‚ÇÇ (inversion‚ÇÅ p)) ‚óæ‚ÇÇ (canonical-resp {p = p} {q = q} u ‚óæ‚ÇÇ (inversion‚ÇÅ q))

------------------------------------------------------------------------------
