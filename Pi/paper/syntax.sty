\ProvidesPackage{syntax}

\RequirePackage{agda}

% Pi
\newcommand{\PiLang}{\mathit{\Pi}}
\newcommand{\PiPlusLang}{\mathit{{\Pi}^{+}}}
\newcommand{\PiHatLang}{\mathit{{\Pi}^{\wedge}}}

\newcommand{\PiCat}{\mathbf{\Pi}_{\mathrm{cat}}}
\newcommand{\PiHatCat}{\mathbf{\Pi}^{\wedge}_{\mathrm{cat}}}
\newcommand{\PiPlusCat}{\mathbf{\Pi}^{+}_{\mathrm{cat}}}

% Types
\newcommand{\UPi}{\mathit{U}}
\newcommand{\UPlus}{\mathit{U}^{+}}
% \newcommand{\UHat}{\mathit{{U}^{\wedge}}}
\newcommand{\UHat}{\Nat}

% Combinators
\newcommand{\iso}{\mathrel{\leftrightarrow}}
\newcommand{\Iso}{\mathrel{\Leftrightarrow}}
\newcommand{\isop}{\mathrel{\leftrightarrow^{+}}}
\newcommand{\Isop}{\mathrel{\Leftrightarrow^{+}}}
\newcommand{\isoh}{\mathrel{\leftrightarrow^{\wedge}}}
\newcommand{\Isoh}{\mathrel{\Leftrightarrow^{\wedge}}}

\newcommand{\swapc}{\AgdaInductiveConstructor{swap}}
\newcommand{\compc}{\mathrel{\circledcirc}}
\newcommand{\idlcc}{\AgdaInductiveConstructor{idl}}
\newcommand{\idrcc}{\AgdaInductiveConstructor{idr}}

\newcommand{\assoccc}{\AgdaInductiveConstructor{assoc}\compc}

% Pi equivalence
\NewDocumentCommand{\quotet}{E{_}{{}}O{}}{
  \ifstrempty{#1}
  {\term{quote}}
  {\term{quote_{#1}}}
  \ifstrempty{#2}{}{({#2})}
}
\NewDocumentCommand{\evalt}{E{_}{{}}O{}}{
  \ifstrempty{#1}
  {\term{eval}}
  {\term{eval_{#1}}}
  \ifstrempty{#2}{}{({#2})}
}
\NewDocumentCommand{\quoteh}{E{_}{{}}O{}}{
  \ifstrempty{#1}
  {\term{quote^\wedge}}
  {\term{quote^\wedge_{#1}}}
  \ifstrempty{#2}{}{({#2})}
}
\NewDocumentCommand{\evalh}{E{_}{{}}O{}}{
  \ifstrempty{#1}
  {\term{eval^\wedge}}
  {\term{eval^\wedge_{#1}}}
  \ifstrempty{#2}{}{({#2})}
}
\NewDocumentCommand{\quotep}{E{_}{{}}O{}}{
  \ifstrempty{#1}
  {\term{quote^+}}
  {\term{quote^+_{#1}}}
  \ifstrempty{#2}{}{({#2})}
}
\NewDocumentCommand{\evalp}{E{_}{{}}O{}}{
  \ifstrempty{#1}
  {\term{eval^+}}
  {\term{eval^+_{#1}}}
  \ifstrempty{#2}{}{({#2})}
}

\NewDocumentCommand{\normt}{E{_}{{}}O{}}{
  \ifstrempty{#1}
  {\term{norm}}
  {\term{norm_{#1}}}
  \ifstrempty{#2}{}{({#2})}
}

% semantics
\DeclarePairedDelimiter{\gdenot}{\llparenthesis}{\rrparenthesis}