
@book{bellmanCombinatorialAnalysis1960,
  title = {Combinatorial {{Analysis}}},
  author = {Bellman, Richard and Hall, Marshall},
  year = {1960},
  volume = {10},
  publisher = {{American Mathematical Society}},
  issn = {2324-7088, 0160-7634},
  doi = {http://dx.doi.org/10.1090/psapm/010},
  url = {https://doi.org/10.1090/psapm/010},
  urldate = {2021-01-30},
  abstract = {Advancing research. Creating connections.},
  annotation = {ZSCC: 0000020},
  isbn = {978-0-8218-1310-2 978-0-8218-7334-2 978-0-8218-9225-1},
  language = {en},
  series = {Proceedings of {{Symposia}} in {{Applied Mathematics}}}
}

@article{bergerTeachingOrdinalPatterns2019,
  title = {Teaching {{Ordinal Patterns}} to a {{Computer}}: {{Efficient Encoding Algorithms Based}} on the {{Lehmer Code}}},
  shorttitle = {Teaching {{Ordinal Patterns}} to a {{Computer}}},
  author = {Berger, Sebastian and Kravtsiv, Andrii and Schneider, Gerhard and Jordan, Denis},
  year = {2019},
  month = oct,
  volume = {21},
  pages = {1023},
  publisher = {{Multidisciplinary Digital Publishing Institute}},
  doi = {10.3390/e21101023},
  url = {https://www.mdpi.com/1099-4300/21/10/1023},
  urldate = {2021-01-30},
  abstract = {Ordinal patterns are the common basis of various techniques used in the study of dynamical systems and nonlinear time series analysis. The present article focusses on the computational problem of turning time series into sequences of ordinal patterns. In a first step, a numerical encoding scheme for ordinal patterns is proposed. Utilising the classical Lehmer code, it enumerates ordinal patterns by consecutive non-negative integers, starting from zero. This compact representation considerably simplifies working with ordinal patterns in the digital domain. Subsequently, three algorithms for the efficient extraction of ordinal patterns from time series are discussed, including previously published approaches that can be adapted to the Lehmer code. The respective strengths and weaknesses of those algorithms are discussed, and further substantiated by benchmark results. One of the algorithms stands out in terms of scalability: its run-time increases linearly with both the pattern order and the sequence length, while its memory footprint is practically negligible. These properties enable the study of high-dimensional pattern spaces at low computational cost. In summary, the tools described herein may improve the efficiency of virtually any ordinal pattern-based analysis method, among them quantitative measures like permutation entropy and symbolic transfer entropy, but also techniques like forbidden pattern identification. Moreover, the concepts presented may allow for putting ideas into practice that up to now had been hindered by computational burden. To enable smooth evaluation, a function library written in the C programming language, as well as language bindings and native implementations for various numerical computation environments are provided in the supplements.},
  annotation = {ZSCC: 0000003},
  copyright = {http://creativecommons.org/licenses/by/3.0/},
  file = {/home/vikraman/Zotero/storage/AHXMFFIG/Berger et al. - 2019 - Teaching Ordinal Patterns to a Computer Efficient.pdf;/home/vikraman/Zotero/storage/EW6CAJLR/1023.html},
  journal = {Entropy},
  keywords = {Lehmer code,ordinal patterns,permutation entropy,symbolic dynamics,symbolic transfer entropy},
  language = {en},
  number = {10}
}

@article{caretteReversibleProgramsUnivalent2018,
  title = {From {{Reversible Programs}} to {{Univalent Universes}} and {{Back}}},
  author = {Carette, Jacques and Chen, Chao-Hong and Choudhury, Vikraman and Sabry, Amr},
  year = {2018},
  month = apr,
  volume = {336},
  pages = {5--25},
  issn = {1571-0661},
  doi = {10.1016/j.entcs.2018.03.013},
  url = {https://www.sciencedirect.com/science/article/pii/S1571066118300161},
  urldate = {2021-05-03},
  abstract = {We establish a close connection between a reversible programming language based on type isomorphisms and a formally presented univalent universe. The correspondence relates combinators witnessing type isomorphisms in the programming language to paths in the univalent universe; and combinator optimizations in the programming language to 2-paths in the univalent universe. The result suggests a simple computational interpretation of paths and of univalence in terms of familiar programming constructs whenever the universe in question is computable.},
  file = {/home/vikraman/Zotero/storage/ASQN28SE/Carette et al_2018_From Reversible Programs to Univalent Universes and Back.pdf;/home/vikraman/Zotero/storage/THN239QE/S1571066118300161.html},
  journal = {Electronic Notes in Theoretical Computer Science},
  keywords = {Agda,Reversible programming,unilance},
  language = {en},
  series = {The {{Thirty}}-Third {{Conference}} on the {{Mathematical Foundations}} of {{Programming Semantics}} ({{MFPS XXXIII}})}
}

@incollection{lehmerTeachingCombinatorialTricks1960a,
  title = {Teaching Combinatorial Tricks to a Computer},
  booktitle = {Proceedings of {{Symposia}} in {{Applied Mathematics}}},
  author = {Lehmer, D. H.},
  editor = {Bellman, Richard and Hall, Marshall},
  year = {1960},
  volume = {10},
  pages = {179--193},
  publisher = {{American Mathematical Society}},
  address = {{Providence, Rhode Island}},
  doi = {10.1090/psapm/010/0113289},
  url = {https://doi.org/10.1090/psapm/010},
  urldate = {2021-01-30},
  annotation = {ZSCC: NoCitationData[s0]},
  isbn = {978-0-8218-1310-2 978-0-8218-9225-1},
  language = {en}
}

@book{univalentfoundationsprogramHomotopyTypeTheory2013,
  title = {Homotopy Type Theory: {{Univalent}} Foundations of Mathematics},
  author = {Univalent Foundations Program, The},
  year = {2013},
  publisher = {{Univalent Foundations Program}},
  address = {{Institute for Advanced Study}},
  url = {https://homotopytypetheory.org/book},
  annotation = {ZSCC: 0000004}
}

@article{vajnovszkiNewEulerMahonian2011,
  title = {A New {{Euler}}\textendash{{Mahonian}} Constructive Bijection},
  author = {Vajnovszki, Vincent},
  year = {2011},
  month = aug,
  volume = {159},
  pages = {1453--1459},
  issn = {0166-218X},
  doi = {10.1016/j.dam.2011.05.012},
  url = {http://www.sciencedirect.com/science/article/pii/S0166218X11001946},
  urldate = {2021-01-30},
  abstract = {Using generating functions, MacMahon proved in 1916 the remarkable fact that the major index has the same distribution as the inversion number for multiset permutations, and in 1968 Foata gave a constructive bijection proving MacMahon's result. Since then, many refinements have been derived, consisting of adding new constraints or new statistics. Here we give a new simple constructive bijection between the set of permutations with a given number of inversions and those with a given major index. We introduce a new statistic, mix, related to the Lehmer code, and using our new bijection we show that the bistatistic (mix,INV) is Euler\textendash Mahonian. Finally, we introduce the McMahon code for permutations which is the major-index counterpart of the Lehmer code and show that the two codes are related by a simple relation.},
  annotation = {ZSCC: 0000011},
  file = {/home/vikraman/Zotero/storage/2UQY9VU8/Vajnovszki - 2011 - A new Eulerâ€“Mahonian constructive bijection.pdf;/home/vikraman/Zotero/storage/DMG43HLI/S0166218X11001946.html},
  journal = {Discrete Applied Mathematics},
  keywords = {Constructive bijection,Inversion number,Major index,Permutation (bi)statistic},
  language = {en},
  number = {14}
}


